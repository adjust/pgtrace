import re

class Locknames:
    #Locknames per postgres version
    __locks = {
        0 : { "96": None,
              "10": None,
              "11": None,
              "12": None,
              "13": None,
              "14": None },
        1 : { "96": "ShmemIndexLock",
              "10": "ShmemIndexLock",
              "11": "ShmemIndexLock",
              "12": "ShmemIndexLock",
              "13": "ShMemIndex",
              "14": "ShMemIndex" },
        2 : { "96": "OidGenLock",
              "10": "OidGenLock",
              "11": "OidGenLock",
              "12": "OidGenLock",
              "13": "OidGen",
              "14": "OidGen" },
        3 : { "96": "XidGenLock",
              "10": "XidGenLock",
              "11": "XidGenLock",
              "12": "XidGenLock",
              "13": "XidGen",
              "14": "XidGen" },
        4 : { "96": "ProcArrayLock",
              "10": "ProcArrayLock",
              "11": "ProcArrayLock",
              "12": "ProcArrayLock",
              "13": "ProcArray",
              "14": "ProcArray" },
        5 : { "96": "SInvalReadLock",
              "10": "SInvalReadLock",
              "11": "SInvalReadLock",
              "12": "SInvalReadLock",
              "13": "SInvalRead",
              "14": "SInvalRead" },
        6 : { "96": "SInvalWriteLock",
              "10": "SInvalWriteLock",
              "11": "SInvalWriteLock",
              "12": "SInvalWriteLock",
              "13": "SInvalWrite",
              "14": "SInvalWrite" },
        7 : { "96": "WALBufMappingLock",
              "10": "WALBufMappingLock",
              "11": "WALBufMappingLock",
              "12": "WALBufMappingLock",
              "13": "WALBufMapping",
              "14": "WALBufMapping" },
        8 : { "96": "WALWriteLock",
              "10": "WALWriteLock",
              "11": "WALWriteLock",
              "12": "WALWriteLock",
              "13": "WALWrite",
              "14": "WALWrite" },
        9 : { "96": "ControlFileLock",
              "10": "ControlFileLock",
              "11": "ControlFileLock",
              "12": "ControLFileLock",
              "13": "ControlFile",
              "14": "ControlFile" },
        10: { "96": "CheckpointLock",
              "10": "CheckpointLock",
              "11": "CheckpointLock",
              "12": "CheckpointLock",
              "13": "Checkpoint",
              "14": None },
        11: { "96": "CLogControlLock",
              "10": "CLogControlLock",
              "11": "CLogControlLock",
              "12": "ClogControlLock",
              "13": "XactSLRU",
              "14": "XactSLRU" },
        12: { "96": "SubtransControlLock",
              "10": "SubtransControlLock",
              "11": "SubtransControlLock",
              "12": "SubtransControlLock",
              "13": "SubtransSLRU",
              "14": "SubtransSLRU" },
        13: { "96": "MultiXactGenLock",
              "10": "MultiXactGenLock",
              "11": "MultiXactGenLock",
              "12": "MultiXactGenLock",
              "13": "MultiXactGen",
              "14": "MultiXactGen" },
        14: { "96": "MultiXactOffsetControlLock",
              "10": "MultiXactOffsetControlLock",
              "11": "MultiXactOffsetControlLock",
              "12": "MultiXactOffsetControlLock",
              "13": "MultiXactOffsetSLRU",
              "14": "MultiXactOffsetSLRU" },
        15: { "96": "MultiXactMemberControlLock",
              "10": "MultiXactMemberControlLock",
              "11": "MultiXactMemberControlLock",
              "12": "MultiXactMemberControlLock",
              "13": "MultiXactMemberSLRU",
              "14": "MultiXactMemberSLRU" },
        16: { "96": "RelCacheInitLock",
              "10": "RelCacheInitLock",
              "11": "RelCacheInitLock",
              "12": "RelCacheInitLock",
              "13": "RelCacheInit",
              "14": "RelCacheInit" },
        17: { "96": "CheckpointerCommLock",
              "10": "CheckpointerCommLock",
              "11": "CheckpointerCommLock",
              "12": "CheckpointerCommLock",
              "13": "CheckpointerComm",
              "14": "CheckpointerComm" },
        18: { "96": "TwoPhaseStateLock",
              "10": "TwoPhaseStateLock",
              "11": "TwoPhaseStateLock",
              "12": "TwoPhaseStateLock",
              "13": "TwoPhaseState",
              "14": "TwoPhaseState" },
        19: { "96": "TablespaceCreateLock",
              "10": "TablespaceCreateLock",
              "11": "TablespaceCreateLock",
              "12": "TablespaceCreateLock",
              "13": "TableSpaceCreate",
              "14": "TableSpaceCreate" },
        20: { "96": "BtreeVacuumLock",
              "10": "BtreeVacuumLock",
              "11": "BtreeVacuumLock",
              "12": "BtreeVacuumLock",
              "13": "BtreeVacuum",
              "14": "BtreeVacuum" },
        21: { "96": "AddinShmemInitLock",
              "10": "AddinShmemInitLock",
              "11": "AddinShmemInitLock",
              "12": "AddinShmemInitLock",
              "13": "AddinShmemInit",
              "14": "AddinShmemInit" },
        22: { "96": "AutovacuumLock",
              "10": "AutovacuumLock",
              "11": "AutovacuumLock",
              "12": "AutovacuumLock",
              "13": "Autovacuum",
              "14": "Autovacuum" },
        23: { "96": "AutovacuumScheduleLock",
              "10": "AutovacuumScheduleLock",
              "11": "AutovacuumScheduleLock",
              "12": "AutovacuumScheduleLock",
              "13": "AutovacuumSchedule",
              "14": "AutovacuumSchedule" },
        24: { "96": "SyncScanLock",
              "10": "SyncScanLock",
              "11": "SyncScanLock",
              "12": "SyncScanLock",
              "13": "SyncScan",
              "14": "SyncScan" },
        25: { "96": "RelationMappngLock",
              "10": "RelationMappingLock",
              "11": "RelationMappingLock",
              "12": "RelationMappingLock",
              "13": "RelationMapping",
              "14": "RelationMapping" },
        26: { "96": "AsyncCtlLock",
              "10": "AsyncCtlLock",
              "11": "AsyncCtlLock",
              "12": "AsyncCtlLock",
              "13": "NotifySLRU",
              "14": "NotifySLRU" },
        27: { "96": "AsyncQueueLock",
              "10": "AsyncQueueLock",
              "11": "AsyncQueueLock",
              "12": "AsyncQueueLock",
              "13": "NotifyQueue",
              "14": "NotifyQueue" },
        28: { "96": "SerializableXactHashLock",
              "10": "SerializableXactHashLock",
              "11": "SerializableXactHashLock",
              "12": "SerializableXactHashLock",
              "13": "SerializableXactHash",
              "14": "SerializableXactHash" },
        29: { "96": "SerializableFinishedListLock",
              "10": "SerializableFinishedListLock",
              "11": "SerializableFinishedListLock",
              "12": "SerializableFinishedListLock",
              "13": "SerializableFinishedList",
              "14": "SerializableFinishedList" },
        30: { "96": "SerializablePredicateLockListLock",
              "10": "SerializablePredicateLockListLock",
              "11": "SerializablePredicateLockListLock",
              "12": "SerializablePredicateLockListLock",
              "13": "SerializablePredicateList",
              "14": "SerializablePredicateList" },
        31: { "96": "OldSerXidLock",
              "10": "OldSerXidLock",
              "11": "OldSerXidLock",
              "12": "OldSerXidLock",
              "13": "SerialSLRU",
              "14": "SerialSLRU" },
        32: { "96": "SyncRepLock",
              "10": "SyncRepLock",
              "11": "SyncRepLock",
              "12": "SyncRepLock",
              "13": "SyncRep",
              "14": "SyncRep" },
        33: { "96": "BackgroundWorkerlock",
              "10": "BackgroundWorkerlock",
              "11": "BackgroundWorkerLock",
              "12": "BackgroundWorkerLock",
              "13": "BackgroundWorker",
              "14": "BackgroundWorker" },
        34: { "96": "DynamicSharedMemoryControlLock",
              "10": "DynamicSharedMemoryControlLock",
              "11": "DynamicSharedMemoryControlLock",
              "12": "DynamicSharedMemoryControlLock",
              "13": "DynamicSharedMemoryControl",
              "14": "DynamicSharedMemoryControl" },
        35: { "96": "AutoFileLock",
              "10": "AutoFileLock",
              "11": "AutoFileLock",
              "12": "AutoFileLock",
              "13": "AutoFile",
              "14": "AutoFile" },
        36: { "96": "ReplicationSlotAllocationLock",
              "10": "ReplicationSlotAllocationLock",
              "11": "ReplicationSlotAllocationLock",
              "12": "ReplicationSlotAllocationLock",
              "13": "ReplicationSlotAllocation",
              "14": "ReplicationSlotAllocation" },
        37: { "96": "ReplicationSlotControlLock",
              "10": "ReplicationSlotControlLock",
              "11": "ReplicationSlotControlLock",
              "12": "ReplicationSlotControlLock",
              "13": "ReplicationSlotControl",
              "14": "ReplicationSlotControl" },
        38: { "96": "CommitTsControlLock",
              "10": "CommitTsControlLock",
              "11": "CommitTsControlLock",
              "12": "CommitTsControlLock",
              "13": "CommitTsSLRU",
              "14": "CommitTsSLRU"},
        39: { "96": "CommitTsLock",
              "10": "CommitTsLock",
              "11": "CommitTsLock",
              "12": "CommitTsLock",
              "13": "CommitTs",
              "14": "CommitTs" },
        40: { "96": "ReplicationOriginLock",
              "10": "ReplicationOriginLock",
              "11": "ReplicationOriginLock",
              "12": "ReplicationOriginLock",
              "13": "ReplicationOrigin",
              "14": "ReplicationOrigin" },
        41: { "96": "MultiXactTruncationLock",
              "10": "MultiXactTruncationLock",
              "11": "MultiXactTruncationLock",
              "12": "MultiXactTruncationLock",
              "13": "MultiXactTruncation",
              "14": "MultiXactTruncation" },
        42: { "96": "OldSnapshotTimeMapLock",
              "10": "OldSnapshotTimeMapLock",
              "11": "OldSnapshotTimeMapLock",
              "12": "OldSnapshotTimeMapLock",
              "13": "OldSnapshotTimeMap",
              "14": "OldSnapshotTimeMap" },
        43: { "96": None,
              "10": "BackendRandomLock",
              "11": "BackendRandomLock",
              "12": "LogicalRepWorkerLock",
              "13": "LogicalRepWorker",
              "14": "LogicalRepWorker" },
        44: { "96": None,
              "10": "LogicalRepWorkerLock",
              "11": "LogicalRepWorkerLock",
              "12": "ClogTruncationLock",
              "13": "XactTruncation",
              "14": "XactTruncation" },
        45: { "96": None,
              "10": "ClogTruncationLock",
              "11": "ClogTruncationLock",
              "12": None,
              "13": None,
              "14": None },
        46: { "96": "WrapLimitsVacuumLock",
              "10": "WrapLimitsVacuumLock",
              "11": "WrapLimitsVacuumLock",
              "12": "WrapLimitsVacuumLock",
              "13": "WrapLimitsVacuum",
              "14": "WrapLimitsVacuum" },
        47: { "96": "NotifyQueueTailLock",
              "10": "NotifyQueueTailLock",
              "11": "NotifyQueueTailLock",
              "12": "NotifyQueueTailLock",
              "13": "NotifyQueueTail",
              "14": "NotifyQueueTail" },
        48: { "96": "main",
              "10": "clog",
              "11": "clog",
              "12": "clog",
              "13": "XactBuffer",
              "14": "XactBuffer" },
        49: { "96": "clog",
              "10": "commit_timestamp",
              "11": "commit_timestamp",
              "12": "commit_timestamp",
              "13": "CommitTSBuffer",
              "14": "CommitTSBuffer" },
        50: { "96": "commit_timestamp",
              "10": "subtrans",
              "11": "subtrans",
              "12": "subtrans",
              "13": "SubtransBuffer",
              "14": "SubtransBuffer" },
        51: { "96": "subtrans",
              "10": "multixact_offset",
              "11": "multixact_offset",
              "12": "multixact_offset",
              "13": "MultiXactOffsetBuffer",
              "14": "MultiXactOffsetBuffer" },
        52: { "96": "multixact_offset",
              "10": "multixact_member",
              "11": "multixact_member",
              "12": "multixact_member",
              "13": "MultiXactMemberBuffer",
              "14": "MultiXactMemberBuffer" },
        53: { "96": "multixact_member",
              "10": "async",
              "11": "async",
              "12": "async",
              "13": "NotifyBuffer",
              "14": "NotifyBuffer" },
        54: { "96": "async",
              "10": "oldserxid",
              "11": "oldserxid",
              "12": "oldserxid",
              "13": "SerialBuffer",
              "14": "SerialBuffer" },
        55: { "96": "oldserxid",
              "10": "wal_insert",
              "11": "wal_insert",
              "12": "wal_insert",
              "13": "WALInsert",
              "14": "WALInsert" },
        56: { "96": "wal_insert",
              "10": "buffer_content",
              "11": "buffer_content",
              "12": "buffer_content",
              "13": "BufferContent",
              "14": "BufferContent" },
        57: { "96": "buffer_content",
              "10": "buffer_io",
              "11": "buffer_io",
              "12": "buffer_io",
              "13": "BufferIO",
              "14": "ReplicationOriginState" },
        58: { "96": "buffer_io",
              "10": "replication_origin",
              "11": "replication_origin",
              "12": "replication_origin",
              "13": "ReplicationOriginState",
              "14": "ReplicationSlotIO" },
        59: { "96": "replication_origin",
              "10": "replication_origin",
              "11": "replication_slot_io",
              "12": "replication_slot_io",
              "13": "ReplicationSlotIO",
              "14": "LockFastPath" },
        60: { "96": "replication_slot_io",
              "10": "proc",
              "11": "proc",
              "12": "proc",
              "13": "LockFastPath",
              "14": "BufferMapping",},
        61: { "96": "proc",
              "10": "buffer_mapping",
              "11": "buffer_mapping",
              "12": "buffer_mapping",
              "13": "BufferMapping",
              "14": "LockManager" },
        62: { "96": "buffer_mapping",
              "10": "lock_manager",
              "11": "lock_manager",
              "12": "lock_manager",
              "13": "LockManager",
              "14": "PredicateLockManager" },
        63: { "96": "lock_manager",
              "10": "predicate_lock_manager",
              "11": "predicate_lock_manager",
              "12": "predicate_lock_manager",
              "13": "PredicateLockManager",
              "14": "ParallelHashJoin" },
        64: { "96": "predicate_lock_manager",
              "10": "parallel_query_dsa",
              "11": "parallel_hash_join",
              "12": "parallel_hash_join",
              "13": "ParallelHashJoin",
              "14": "ParallelQueryDSA" },
        65: { "10": "tbm",
              "11": "parallel_query_dsa",
              "12": "parallel_query_dsa",
              "13": "ParallelQueryDSA",
              "14": "PerSessionDSA" },
        66: { "11": "session_dsa",
              "12": "session_dsa",
              "13": "PerSessionDSA",
              "14": "PerSessionRecordType" },
        67: { "11": "session_record_table",
              "12": "session_record_table",
              "13": "PerSessionRecordType",
              "14": "PerSessionRecordTypmod" },
        68: { "11": "session_typmod_table",
              "12": "session_typmod_table",
              "13": "PerSessionRecordTypmod",
              "14": "SharedTupleStore" },
        69: { "11": "shared_tuplestore",
              "12": "shared_tuplestore",
              "13": "SharedTupleStore",
              "14": "SharedTidBitmap" },
        70: { "11": "tbm",
              "12": "tbm",
              "13": "SharedTidBitmap",
              "14": "ParallelAppend" },
        71: { "11": "parallel_append",
              "12": "parallel_append",
              "13": "ParallelAppend",
              "14": "PerXactPredicateList" },
        72: { "12": "serializable_xact",
              "13": "serializable_xact" },
    }

    def __init__(self, version):

        self.set_version(version);

    def set_version(self, version):
        self.__is_supported(version);

    def __is_supported(self, version):
        s = set();

        # Normalize 9.6 ... etc.pp.
        pg = re.sub(r'^9\.(\d+)(\.\d+)?',r'9\1', str(version))
        pg = re.sub(r'^(1\d+)\.\d+(\.\d+)?$', r'\1', pg)

        for tranche in self.__locks.keys():
            for ver in self.__locks[tranche].keys():
                s.add(ver);
        if str(pg) in s:
            self.__version = pg
        else:
            raise ValueError('Unsupported version: %s' % version)

    def get_lockname_by_id(self, tranche_id):
        try:
            tranche = self.__locks[int(tranche_id)][self.__version]
        except:
            return None

        return tranche

    def get_id_by_lockname(self, lockname):
        for tranche in self.__locks.keys():
            if ( self.__version, str(lockname) ) in self.__locks[tranche].items():
                return tranche

        return None

    def print_locks(self):
        for tranche in self.__locks.keys():
            try:
                print("tranche %d: %s" % (tranche, self.__locks[tranche][self.__version]))
            except:
                return
